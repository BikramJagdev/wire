language: go
dist: xenial
sudo: false
services:
  - docker
env:
  matrix:
    - GO111MODULE=on
matrix:
  allow_failures:
  include:
    - os: linux
      go: 1.13.x
      cache:
        directories:
          - "/home/travis/.cache/go-build"
    - os: osx
      go: 1.13.x
      cache:
        directories:
          - "/Users/travis/Library/Caches/go-build"
  # - os: windows
  #   go: 1.13.x
before_install:
  # Setup directory for binaries
  - mkdir ./bin
  - export PATH=$PATH:$PWD/bin
  # Misspell
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_linux_64bit.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O misspell.tar.gz https://github.com/client9/misspell/releases/download/v0.3.4/misspell_0.3.4_mac_64bit.tar.gz; fi
  - tar xf misspell.tar.gz && cp ./misspell ./bin/misspell
  # staticcheck
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_linux_amd64.tar.gz; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O staticcheck.tar.gz https://github.com/dominikh/go-tools/releases/download/2019.2.2/staticcheck_darwin_amd64.tar.gz; fi
  - tar xf staticcheck.tar.gz && cp ./staticcheck/staticcheck ./bin/staticcheck
  # golint
  - go get -u golang.org/x/lint/golint
  # gocyclo
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-linux-amd64; fi
  # - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget -O ./bin/gocyclo https://github.com/adamdecaf/gocyclo/releases/download/2019-08-09/gocyclo-darwin-amd64; fi
  # - chmod +x ./bin/gocyclo
before_script:
  - GOFILES=$(find . -type f -name '*.go' | grep -v client)
  - go mod graph
script:
  # Just check gofmt on linux, it's the fastest builder
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then test -z $(gofmt -s -l $GOFILES); fi
  - go test ./... -race -coverprofile=coverage.txt -covermode=atomic
  - misspell -error -locale US $GOFILES
  # - gocyclo -over 25 $GOFILES # TODO(adam): need to re-enable (top 2 methods below)
  # 115 wire (*Reader).parseLine ./reader.go:88:1
  #  45 wire (*FEDWireMessage).isBusinessCodeValid ./fedWireMessage.go:228:1
  - golint -set_exit_status $GOFILES
  - staticcheck *.go
  - staticcheck ./cmd/server/*.go
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco install -y mingw; export PATH=/c/tools/mingw64/bin:"$PATH";fi
after_success:
  - bash <(curl -s https://codecov.io/bash)
  - make
  - make client
  - make docker
before_deploy:
  - make dist
after_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - make release-push
deploy:
  provider: releases
  api_key:
    secure: Qhweoc+1/wLjbq6uNUHti8ZSaFFhuYTrGLaUKVR/QMNJtIbIuEjIXYhPYdKOl67vId2SDjTYW9tsAEpYReWmpzRZ33uVke/G1tXovrGVZFiIxgytndDKintJzC1LKMWdy0k9X9CVIg5e1jd7DiJOKauwM4/y4quJiTgy1z66rkrYH/HIM3h47gDno74y7/8OSpgNcdYr5iashwWdT7eWE5Dn1Fr8v6+/ClLQpbxczB0la8cU3zQl+o8qvZ3Y5lNEBOcCV7FtFpXhFnYEDGtVpZBIUXFJLIRCj4+HQ0DqZ+wC4RGb7lSkRLvTqhpIPn2a4gIOkKXeS3J9dgBYXHkWYF+wLUmbtqgWW7a6jK2n1G8MFNrbQiLi+AgIcbop8h96Q1W8ueBYj7cMXlKKlWAX5PGt2zryvD4DR3P/iFhC6h1jf/ISVVl2BJUbLSCmzv+qR8Y41ptzWUR2lC3lR2/OCbEpgnU5AiZfPhJNrooKm4fHxTGH23d6HCWDw1NthYUMBkn22Jkf3pEZYQsGXj7Q00jgQ6WfAlbb7SHWgbxVb+fSgkU0tWtWInf76VZhROfdCqtvmkqJV3ThLi0RRzXi7CHilx9mL05ISkaDmoJWULDgUb5qdrIvg8Bhi/5EDWQ8sEDJEN239F7go1I6HPtD6P9BYXgS09tu8cidzF4mtyw=
  file_glob: true
  file:
    - bin/wire-*
  on:
    repo: moov-io/wire
    tags: true
    go: 1.13.x
  skip_cleanup: true
